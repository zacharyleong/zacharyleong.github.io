---
interface Props {
  images: Array<{ src: string; alt: string }>;
  caption?: string;
}

const { images, caption } = Astro.props;
const galleryId = 'gallery-' + crypto.randomUUID();
---

<div class="image-gallery" id={galleryId}>
  {images.map((image) => (
    <a 
      href={image.src}
      data-src={image.src}
      class="gallery-item"
    >
      <img src={image.src} alt={image.alt} loading="lazy" />
    </a>
  ))}
</div>

{caption && <figcaption class="gallery-caption">{caption}</figcaption>}

<script is:inline>
  (async function() {
    async function initGalleries() {
      // Dynamically import LightGallery modules
      const { default: lightGallery } = await import('https://cdn.jsdelivr.net/npm/lightgallery@2.9.0/lightgallery.es5.js');
      const { default: lgZoom } = await import('https://cdn.jsdelivr.net/npm/lightgallery@2.9.0/plugins/zoom/lg-zoom.es5.js');
      const { default: lgThumbnail } = await import('https://cdn.jsdelivr.net/npm/lightgallery@2.9.0/plugins/thumbnail/lg-thumbnail.es5.js');
      const { default: lgHash } = await import('https://cdn.jsdelivr.net/npm/lightgallery@2.9.0/plugins/hash/lg-hash.es5.js');
      
      const galleries = document.querySelectorAll('.image-gallery:not(.lg-initialized)');
      galleries.forEach((gallery) => {
        lightGallery(gallery, {
          plugins: [lgZoom, lgThumbnail, lgHash],
          speed: 500,
          thumbnail: true,
          animateThumb: true,
          getCaptionFromTitleOrAlt: true,
          galleryId: gallery.id,
        });
        gallery.classList.add('lg-initialized');
      });
    }

    // Run on both DOMContentLoaded and immediately (for already-loaded pages)
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initGalleries);
    } else {
      initGalleries();
    }
  })();
</script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lightgallery@2.9.0/css/lightgallery-bundle.min.css" />

<style>
  .image-gallery {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 0.5rem;
    margin: 1rem 0;
  }

  .gallery-item {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    cursor: pointer;
    display: block;
    aspect-ratio: auto;
  }

  .gallery-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
    display: block;
  }

  .gallery-item:hover img {
    transform: scale(1.02);
  }

  .gallery-caption {
    font-size: 0.9rem;
    color: #666;
    margin: 0 0 0 0;
    font-style: italic;
    text-align: center;
  }
</style>
